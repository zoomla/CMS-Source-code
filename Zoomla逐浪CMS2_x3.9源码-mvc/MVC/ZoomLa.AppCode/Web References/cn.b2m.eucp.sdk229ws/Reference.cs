//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace ZoomLa.AppCode.cn.b2m.eucp.sdk229ws {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SDKServiceBinding", Namespace="http://sdkhttp.eucp.b2m.cn/")]
    public partial class SDKService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelMOForwardOperationCompleted;
        
        private System.Threading.SendOrPostCallback chargeUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEachFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMOOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback registDetailInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback registExOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendVoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback serialPwdUpdOperationCompleted;
        
        private System.Threading.SendOrPostCallback setMOForwardOperationCompleted;
        
        private System.Threading.SendOrPostCallback setMOForwardExOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SDKService() {
            this.Url = global::ZoomLa.AppCode.Properties.Settings.Default.ZoomLa_AppCode_cn_b2m_eucp_sdk229ws_SDKService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getVersionCompletedEventHandler getVersionCompleted;
        
        /// <remarks/>
        public event getReportCompletedEventHandler getReportCompleted;
        
        /// <remarks/>
        public event cancelMOForwardCompletedEventHandler cancelMOForwardCompleted;
        
        /// <remarks/>
        public event chargeUpCompletedEventHandler chargeUpCompleted;
        
        /// <remarks/>
        public event getBalanceCompletedEventHandler getBalanceCompleted;
        
        /// <remarks/>
        public event getEachFeeCompletedEventHandler getEachFeeCompleted;
        
        /// <remarks/>
        public event getMOCompletedEventHandler getMOCompleted;
        
        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
        /// <remarks/>
        public event registDetailInfoCompletedEventHandler registDetailInfoCompleted;
        
        /// <remarks/>
        public event registExCompletedEventHandler registExCompleted;
        
        /// <remarks/>
        public event sendSMSCompletedEventHandler sendSMSCompleted;
        
        /// <remarks/>
        public event sendVoiceCompletedEventHandler sendVoiceCompleted;
        
        /// <remarks/>
        public event serialPwdUpdCompletedEventHandler serialPwdUpdCompleted;
        
        /// <remarks/>
        public event setMOForwardCompletedEventHandler setMOForwardCompleted;
        
        /// <remarks/>
        public event setMOForwardExCompletedEventHandler setMOForwardExCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sdkhttp.eucp.b2m.cn/", ResponseNamespace="http://sdkhttp.eucp.b2m.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getVersion() {
            object[] results = this.Invoke("getVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVersionAsync() {
            this.getVersionAsync(null);
        }
        
        /// <remarks/>
        public void getVersionAsync(object userState) {
            if ((this.getVersionOperationCompleted == null)) {
                this.getVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVersionOperationCompleted);
            }
            this.InvokeAsync("getVersion", new object[0], this.getVersionOperationCompleted, userState);
        }
        
        private void OngetVersionOperationCompleted(object arg) {
            if ((this.getVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVersionCompleted(this, new getVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sdkhttp.eucp.b2m.cn/", ResponseNamespace="http://sdkhttp.eucp.b2m.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public statusReport[] getReport([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getReport", new object[] {
                        arg0,
                        arg1});
            return ((statusReport[])(results[0]));
        }
        
        /// <remarks/>
        public void getReportAsync(string arg0, string arg1) {
            this.getReportAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getReportAsync(string arg0, string arg1, object userState) {
            if ((this.getReportOperationCompleted == null)) {
                this.getReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReportOperationCompleted);
            }
            this.InvokeAsync("getReport", new object[] {
                        arg0,
                        arg1}, this.getReportOperationCompleted, userState);
        }
        
        private void OngetReportOperationCompleted(object arg) {
            if ((this.getReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReportCompleted(this, new getReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sdkhttp.eucp.b2m.cn/", ResponseNamespace="http://sdkhttp.eucp.b2m.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int cancelMOForward([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("cancelMOForward", new object[] {
                        arg0,
                        arg1});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void cancelMOForwardAsync(string arg0, string arg1) {
            this.cancelMOForwardAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void cancelMOForwardAsync(string arg0, string arg1, object userState) {
            if ((this.cancelMOForwardOperationCompleted == null)) {
                this.cancelMOForwardOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelMOForwardOperationCompleted);
            }
            this.InvokeAsync("cancelMOForward", new object[] {
                        arg0,
                        arg1}, this.cancelMOForwardOperationCompleted, userState);
        }
        
        private void OncancelMOForwardOperationCompleted(object arg) {
            if ((this.cancelMOForwardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelMOForwardCompleted(this, new cancelMOForwardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sdkhttp.eucp.b2m.cn/", ResponseNamespace="http://sdkhttp.eucp.b2m.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int chargeUp([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            object[] results = this.Invoke("chargeUp", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void chargeUpAsync(string arg0, string arg1, string arg2, string arg3) {
            this.chargeUpAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void chargeUpAsync(string arg0, string arg1, string arg2, string arg3, object userState) {
            if ((this.chargeUpOperationCompleted == null)) {
                this.chargeUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchargeUpOperationCompleted);
            }
            this.InvokeAsync("chargeUp", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.chargeUpOperationCompleted, userState);
        }
        
        private void OnchargeUpOperationCompleted(object arg) {
            if ((this.chargeUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chargeUpCompleted(this, new chargeUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sdkhttp.eucp.b2m.cn/", ResponseNamespace="http://sdkhttp.eucp.b2m.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double getBalance([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getBalance", new object[] {
                        arg0,
                        arg1});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getBalanceAsync(string arg0, string arg1) {
            this.getBalanceAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getBalanceAsync(string arg0, string arg1, object userState) {
            if ((this.getBalanceOperationCompleted == null)) {
                this.getBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBalanceOperationCompleted);
            }
            this.InvokeAsync("getBalance", new object[] {
                        arg0,
                        arg1}, this.getBalanceOperationCompleted, userState);
        }
        
        private void OngetBalanceOperationCompleted(object arg) {
            if ((this.getBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBalanceCompleted(this, new getBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sdkhttp.eucp.b2m.cn/", ResponseNamespace="http://sdkhttp.eucp.b2m.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double getEachFee([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getEachFee", new object[] {
                        arg0,
                        arg1});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getEachFeeAsync(string arg0, string arg1) {
            this.getEachFeeAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getEachFeeAsync(string arg0, string arg1, object userState) {
            if ((this.getEachFeeOperationCompleted == null)) {
                this.getEachFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEachFeeOperationCompleted);
            }
            this.InvokeAsync("getEachFee", new object[] {
                        arg0,
                        arg1}, this.getEachFeeOperationCompleted, userState);
        }
        
        private void OngetEachFeeOperationCompleted(object arg) {
            if ((this.getEachFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEachFeeCompleted(this, new getEachFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sdkhttp.eucp.b2m.cn/", ResponseNamespace="http://sdkhttp.eucp.b2m.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public mo[] getMO([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getMO", new object[] {
                        arg0,
                        arg1});
            return ((mo[])(results[0]));
        }
        
        /// <remarks/>
        public void getMOAsync(string arg0, string arg1) {
            this.getMOAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getMOAsync(string arg0, string arg1, object userState) {
            if ((this.getMOOperationCompleted == null)) {
                this.getMOOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMOOperationCompleted);
            }
            this.InvokeAsync("getMO", new object[] {
                        arg0,
                        arg1}, this.getMOOperationCompleted, userState);
        }
        
        private void OngetMOOperationCompleted(object arg) {
            if ((this.getMOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMOCompleted(this, new getMOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sdkhttp.eucp.b2m.cn/", ResponseNamespace="http://sdkhttp.eucp.b2m.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int logout([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("logout", new object[] {
                        arg0,
                        arg1});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void logoutAsync(string arg0, string arg1) {
            this.logoutAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void logoutAsync(string arg0, string arg1, object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[] {
                        arg0,
                        arg1}, this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new logoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sdkhttp.eucp.b2m.cn/", ResponseNamespace="http://sdkhttp.eucp.b2m.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int registDetailInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg6, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg7, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg8, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg9) {
            object[] results = this.Invoke("registDetailInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7,
                        arg8,
                        arg9});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void registDetailInfoAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, string arg6, string arg7, string arg8, string arg9) {
            this.registDetailInfoAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, null);
        }
        
        /// <remarks/>
        public void registDetailInfoAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, string arg6, string arg7, string arg8, string arg9, object userState) {
            if ((this.registDetailInfoOperationCompleted == null)) {
                this.registDetailInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregistDetailInfoOperationCompleted);
            }
            this.InvokeAsync("registDetailInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7,
                        arg8,
                        arg9}, this.registDetailInfoOperationCompleted, userState);
        }
        
        private void OnregistDetailInfoOperationCompleted(object arg) {
            if ((this.registDetailInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registDetailInfoCompleted(this, new registDetailInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sdkhttp.eucp.b2m.cn/", ResponseNamespace="http://sdkhttp.eucp.b2m.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int registEx([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("registEx", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void registExAsync(string arg0, string arg1, string arg2) {
            this.registExAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void registExAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.registExOperationCompleted == null)) {
                this.registExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregistExOperationCompleted);
            }
            this.InvokeAsync("registEx", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.registExOperationCompleted, userState);
        }
        
        private void OnregistExOperationCompleted(object arg) {
            if ((this.registExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registExCompleted(this, new registExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sdkhttp.eucp.b2m.cn/", ResponseNamespace="http://sdkhttp.eucp.b2m.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int sendSMS([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute("arg3", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string[] arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg6, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg7, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg8) {
            object[] results = this.Invoke("sendSMS", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7,
                        arg8});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void sendSMSAsync(string arg0, string arg1, string arg2, string[] arg3, string arg4, string arg5, string arg6, int arg7, long arg8) {
            this.sendSMSAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, null);
        }
        
        /// <remarks/>
        public void sendSMSAsync(string arg0, string arg1, string arg2, string[] arg3, string arg4, string arg5, string arg6, int arg7, long arg8, object userState) {
            if ((this.sendSMSOperationCompleted == null)) {
                this.sendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendSMSOperationCompleted);
            }
            this.InvokeAsync("sendSMS", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7,
                        arg8}, this.sendSMSOperationCompleted, userState);
        }
        
        private void OnsendSMSOperationCompleted(object arg) {
            if ((this.sendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendSMSCompleted(this, new sendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sdkhttp.eucp.b2m.cn/", ResponseNamespace="http://sdkhttp.eucp.b2m.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sendVoice([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute("arg3", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string[] arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg6, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg7, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg8) {
            object[] results = this.Invoke("sendVoice", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7,
                        arg8});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendVoiceAsync(string arg0, string arg1, string arg2, string[] arg3, string arg4, string arg5, string arg6, int arg7, long arg8) {
            this.sendVoiceAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, null);
        }
        
        /// <remarks/>
        public void sendVoiceAsync(string arg0, string arg1, string arg2, string[] arg3, string arg4, string arg5, string arg6, int arg7, long arg8, object userState) {
            if ((this.sendVoiceOperationCompleted == null)) {
                this.sendVoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendVoiceOperationCompleted);
            }
            this.InvokeAsync("sendVoice", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7,
                        arg8}, this.sendVoiceOperationCompleted, userState);
        }
        
        private void OnsendVoiceOperationCompleted(object arg) {
            if ((this.sendVoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendVoiceCompleted(this, new sendVoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sdkhttp.eucp.b2m.cn/", ResponseNamespace="http://sdkhttp.eucp.b2m.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int serialPwdUpd([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            object[] results = this.Invoke("serialPwdUpd", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void serialPwdUpdAsync(string arg0, string arg1, string arg2, string arg3) {
            this.serialPwdUpdAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void serialPwdUpdAsync(string arg0, string arg1, string arg2, string arg3, object userState) {
            if ((this.serialPwdUpdOperationCompleted == null)) {
                this.serialPwdUpdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserialPwdUpdOperationCompleted);
            }
            this.InvokeAsync("serialPwdUpd", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.serialPwdUpdOperationCompleted, userState);
        }
        
        private void OnserialPwdUpdOperationCompleted(object arg) {
            if ((this.serialPwdUpdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serialPwdUpdCompleted(this, new serialPwdUpdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sdkhttp.eucp.b2m.cn/", ResponseNamespace="http://sdkhttp.eucp.b2m.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int setMOForward([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("setMOForward", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void setMOForwardAsync(string arg0, string arg1, string arg2) {
            this.setMOForwardAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setMOForwardAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.setMOForwardOperationCompleted == null)) {
                this.setMOForwardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMOForwardOperationCompleted);
            }
            this.InvokeAsync("setMOForward", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setMOForwardOperationCompleted, userState);
        }
        
        private void OnsetMOForwardOperationCompleted(object arg) {
            if ((this.setMOForwardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setMOForwardCompleted(this, new setMOForwardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sdkhttp.eucp.b2m.cn/", ResponseNamespace="http://sdkhttp.eucp.b2m.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int setMOForwardEx([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute("arg2", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string[] arg2) {
            object[] results = this.Invoke("setMOForwardEx", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void setMOForwardExAsync(string arg0, string arg1, string[] arg2) {
            this.setMOForwardExAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setMOForwardExAsync(string arg0, string arg1, string[] arg2, object userState) {
            if ((this.setMOForwardExOperationCompleted == null)) {
                this.setMOForwardExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMOForwardExOperationCompleted);
            }
            this.InvokeAsync("setMOForwardEx", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setMOForwardExOperationCompleted, userState);
        }
        
        private void OnsetMOForwardExOperationCompleted(object arg) {
            if ((this.setMOForwardExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setMOForwardExCompleted(this, new setMOForwardExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sdkhttp.eucp.b2m.cn/")]
    public partial class statusReport {
        
        private string errorCodeField;
        
        private string memoField;
        
        private string mobileField;
        
        private string receiveDateField;
        
        private int reportStatusField;
        
        private long seqIDField;
        
        private string serviceCodeAddField;
        
        private string submitDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string memo {
            get {
                return this.memoField;
            }
            set {
                this.memoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string receiveDate {
            get {
                return this.receiveDateField;
            }
            set {
                this.receiveDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int reportStatus {
            get {
                return this.reportStatusField;
            }
            set {
                this.reportStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long seqID {
            get {
                return this.seqIDField;
            }
            set {
                this.seqIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serviceCodeAdd {
            get {
                return this.serviceCodeAddField;
            }
            set {
                this.serviceCodeAddField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string submitDate {
            get {
                return this.submitDateField;
            }
            set {
                this.submitDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sdkhttp.eucp.b2m.cn/")]
    public partial class mo {
        
        private string addSerialField;
        
        private string addSerialRevField;
        
        private string channelnumberField;
        
        private string mobileNumberField;
        
        private string sentTimeField;
        
        private string smsContentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string addSerial {
            get {
                return this.addSerialField;
            }
            set {
                this.addSerialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string addSerialRev {
            get {
                return this.addSerialRevField;
            }
            set {
                this.addSerialRevField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string channelnumber {
            get {
                return this.channelnumberField;
            }
            set {
                this.channelnumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mobileNumber {
            get {
                return this.mobileNumberField;
            }
            set {
                this.mobileNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sentTime {
            get {
                return this.sentTimeField;
            }
            set {
                this.sentTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string smsContent {
            get {
                return this.smsContentField;
            }
            set {
                this.smsContentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getVersionCompletedEventHandler(object sender, getVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getReportCompletedEventHandler(object sender, getReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public statusReport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((statusReport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void cancelMOForwardCompletedEventHandler(object sender, cancelMOForwardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelMOForwardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelMOForwardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void chargeUpCompletedEventHandler(object sender, chargeUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chargeUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chargeUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getBalanceCompletedEventHandler(object sender, getBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getEachFeeCompletedEventHandler(object sender, getEachFeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEachFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEachFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getMOCompletedEventHandler(object sender, getMOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public mo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((mo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void logoutCompletedEventHandler(object sender, logoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void registDetailInfoCompletedEventHandler(object sender, registDetailInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registDetailInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registDetailInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void registExCompletedEventHandler(object sender, registExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void sendSMSCompletedEventHandler(object sender, sendSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void sendVoiceCompletedEventHandler(object sender, sendVoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendVoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendVoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void serialPwdUpdCompletedEventHandler(object sender, serialPwdUpdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serialPwdUpdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serialPwdUpdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void setMOForwardCompletedEventHandler(object sender, setMOForwardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setMOForwardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setMOForwardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void setMOForwardExCompletedEventHandler(object sender, setMOForwardExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setMOForwardExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setMOForwardExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591